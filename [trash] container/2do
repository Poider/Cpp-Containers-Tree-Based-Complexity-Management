check in cpp reference header if the func is defined or not 

in vector you only wanna allocate occassionally so allocate works

check if iterators default constructor need to do smth

test all iterator operations (check if stuff that should work with const works with const / shouldnt be changed)

check if typedef the traits or make its own struct and include it

check if typdef const typename works // I think it does

check if I need to make const_iterator class or what i did is good

allocate sizeof
construct(allocatedptr, value);

if capacity is not enough double

const obj can only use const methods, thus we code const version so it uses it

check if const iterator and const reverse iterator are actually const (test if you can modify stuff from a const iterator)

change all size_t to size_type??

while() double_up(); if theres a range of stuff added

when youre in the same scope, you put default args for template only on one declaration

maps cant have a duplicate key

template<class T>
struct a<T> ???? why is there a T on the struct name

reverse iterator change it to take iterator as internal value 